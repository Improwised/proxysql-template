datadir="/var/lib/proxysql"
admin_variables=
{
  admin_credentials="admin:admin"
  stats_credentials="admin:admin"
  mysql_ifaces="0.0.0.0:6032"
  refresh_interval=2000
  web_enabled=true
  cluster_username="admin"
  cluster_password="admin"
  cluster_check_interval_ms=30000
  cluster_check_status_frequency=100
}
mysql_variables=
{
  threads=4
  max_connections=2048
  default_query_delay=0
  default_query_timeout=36000000
  have_compress=true
  poll_timeout=2000
  interfaces="0.0.0.0:6033;/tmp/proxysql.sock"
  default_schema="information_schema"
  stacksize=1048576
  server_version="8.0.3"
  connect_timeout_server=10000
  monitor_history=60000
  monitor_connect_interval=200000
  monitor_ping_interval=200000
  ping_interval_server_msec=10000
  ping_timeout_server=200
  query_retries_on_failure=3
  commands_stats=true
  sessions_sort=true
}


proxysql_servers:
(
  { hostname:"0.0.0.0", port:6032, weight:0, comment:"Discovery" },
)

mysql_servers:
(
  { address:"0.0.0.0", port:3306, hostgroup:1, max_connections:100, weight:100 },
)
mysql_users:
(
  { username:"root", password:"root", default_hostgroup:1, active:1 },
)


### extra
# mysql_galera_hostgroups =
# (
#   ENV.MYSQL_GALERA_HOSTGROUPS
#   { writer_hostgroup={{ .writerHostgroup }}, backup_writer_hostgroup={{ .backupWriterHostgroup }}, reader_hostgroup={{ .readerHostgroup }}, offline_hostgroup={{ .offlineHostgroup }}, active={{ .active }}, max_writers={{ .maxWriters }}, writer_is_also_reader={{ .writerIsAlsoReader }}, max_transactions_behind={{ .maxTransactionsBehind }}, comment="{{ .comment }}" },
# )
# mysql_replication_hostgroups =
# (
#   ENV.MYSQL_REPLICATION_HOSTGROUPS
#   { writer_hostgroup={{ .writerHostgroup }}, reader_hostgroup={{ .readerHostgroup }}, comment="{{ .comment }}" },
# )
# mysql_query_rules =
# (
#   ENV.MYSQL_QUERY_RULES
#   { rule_id={{ .id }}, active={{ .active }}, match_pattern="{{ .pattern }}", destination_hostgroup={{ .destinationHostgroup }}, apply={{ .apply }}, comment="{{ .comment }}" },
# )